  // ─── 정수(Int) ───────────────────────────────
    int_i8:   i8,    //  8비트 부호 있는 정수
    int_i16:  i16,   // 16비트 부호 있는 정수
    int_i32:  i32,   // 32비트 부호 있는 정수
    int_i64:  i64,   // 64비트 부호 있는 정수

    // ─── 부호 없는 정수(Uint) ─────────────────────
    uint_u8:  u8,    //  8비트 부호 없는 정수
    uint_u16: u16,   // 16비트 부호 없는 정수
    uint_u32: u32,   // 32비트 부호 없는 정수
    uint_u64: u64,   // 64비트 부호 없는 정수

    // ─── 부동소수점(Float) ──────────────────────
    float_f32: f32,  // 32비트 IEEE 754 부동소수점
    float_f64: f64,  // 64비트 IEEE 754 부동소수점

    // ─── 기타 기본 타입 ──────────────────────────
    boolean:   bool,            // true/false
    character: char,            // 하나의 유니코드 스칼라 값
    string:    String,          // 소유권 있는 힙 문자열
    str_slice: &'static str,    // 정적 문자열 슬라이스

    // ─── 복합 타입 ─────────────────────────────
    tuple: (i32, f64, bool),    // 서로 다른 타입을 묶은 튜플
    array: [i32; 3],            // 같은 타입 고정 길이 배열
    vec:   Vec<i32>,            // 같은 타입 가변 길이 벡터

    // ─── 제너릭/열거형 ──────────────────────────
    option_some: Option<i32>,   // 값이 있거나(None) 없거나(Some)
    option_none: Option<String>,// None 케이스 예시

    // ─── 컬렉션 ───────────────────────────────
    map: HashMap<String, i32>,  // 문자열 키 → 정수 값 맵

예제 
        int_i8:   -8,
        int_i16:  -16,
        int_i32:  -32,
        int_i64:  -64,
        uint_u8:   8,
        uint_u16: 16,
        uint_u32: 32,
        uint_u64: 64,
        float_f32: 3.14,
        float_f64: 6.28,
        boolean:   true,
        character: '🐍',
        string:    "헬로우".to_string(),
        str_slice: "static 문자열",
        tuple:     (2025, 7.21, false),
        array:     [1, 2, 3],
        vec:       vec![10, 20, 30],
        option_some: Some(42),
        option_none: None,
        map:       hm,